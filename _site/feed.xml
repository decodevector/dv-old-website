<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <generator uri="http://jekyllrb.com" version="3.8.3">Jekyll</generator>
  
  
  <link href="http://decodevector.mathscapes.xyz//feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://decodevector.mathscapes.xyz//" rel="alternate" type="text/html" />
  <updated>2018-07-02T00:59:40+05:30</updated>
  <id>http://decodevector.mathscapes.xyz///</id>

  
    <title type="html">DecodeVector</title>
  

  

  
    <author>
        <name>Mathscapes Research</name>
      
      
    </author>
  

  
  
    <entry>
      
      <title type="html">Week 34: Don’t ____</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-34/" rel="alternate" type="text/html" title="Week 34: Don't ____" />
      <published>2018-07-02T00:47:00+05:30</published>
      <updated>2018-07-02T00:47:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-34</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-34/">&lt;p&gt;It has been a long journey in DV for me, probably the longest as the first student of this ‘5th edition’ of the gang of new theoretical computer science enthusiasts every year, who get together with the benevolent dictator (Gaurav), and learn how to speak to a computer and solve problems through programming.&lt;/p&gt;

&lt;p&gt;Let me put out my current status out there first: I have just 3 points, after 82 days and 28 problems. As of now, just ‘being in the game’ has been my greatest achievement - or so I tell myself.&lt;/p&gt;

&lt;p&gt;What I can therefore share with you today, is more of ‘what not to do’, to be good at DV.&lt;/p&gt;

&lt;h2 id=&quot;dont-skip&quot;&gt;Don’t skip&lt;/h2&gt;

&lt;p&gt;It is NOT Impossible to learn how to code, if you are willing to work on it daily. My other team-mates are at (Apoorva), or approaching (Simran) Level-1 (100+ points) thanks to their dedication, and daily efforts. Pranjal, our third teammate is keeping afloat much better. And I, the 4th, strive to stay in the game, frantically trying to upload a solved PSET problem before the date changes. This is because I skip days, and to add to it, on many days, I may not complete a problem.&lt;/p&gt;

&lt;h2 id=&quot;dont-be-afraid&quot;&gt;Don’t be afraid&lt;/h2&gt;

&lt;p&gt;Its been ages since I did maths problems, and the gap has taken a toll. Things that you might need only a brush up, demands a thorough revisit from me for me to be able to apply them while I attempt a PSET problem. I’ve just now brought my books and notes from class 9th and 10th from my home to study from. And my DV gang has gifted me an R D Sharma :slightly_smiling_face:. I absolutely love my team!&lt;/p&gt;

&lt;h2 id=&quot;dont-be-shy&quot;&gt;Don’t be shy&lt;/h2&gt;

&lt;p&gt;If you want to learn something, you have to overcome the fear of being judged. I shamelessly ping Simran when I’m stuck. I’m a learner in this space, though I may be a faculty in another. So have Apoorva and Pranjal been my teachers in this space whenever I get stuck - so park that shyness aside!&lt;/p&gt;

&lt;h2 id=&quot;dont-take-things-for-granted&quot;&gt;Don’t take things for granted&lt;/h2&gt;
&lt;p&gt;There is NEVER one way to solve a problem. Neither is there ever one best approach. Question and analyse everything that you are doing - only then can you move ahead confidently. If you don’t, you’ll get stuck at the immediate next step.&lt;/p&gt;

&lt;h2 id=&quot;dont-give-up&quot;&gt;Don’t give up&lt;/h2&gt;
&lt;p&gt;I never thought I could code. Now I can code. Its baby steps, but we were all babies one day - be it Linus Torvalds (creator of Linux) or Guido van Rossum (author of the Python programming language). There is only one key I know of, and the most reliable one - NOT GIVING UP. There is NO OTHER GUARANTEED way to succeed.&lt;/p&gt;

&lt;p&gt;So, DON’T DELAY, JUST BEGIN. You might just surprise yourself!&lt;/p&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): Simran (7)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Apoorva (55+)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Apoorva (137)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Apoorva (137)&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (13/06/2018-02/07/2018 .. 19 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Apoorva (29/04/2018 .. 14 problems)&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Vineeta Rath</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">It has been a long journey in DV for me, probably the longest as the first student of this ‘5th edition’ of the gang of new theoretical computer science enthusiasts every year, who get together with the benevolent dictator (Gaurav), and learn how to speak to a computer and solve problems through programming.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Week 33: Keep charged</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-33/" rel="alternate" type="text/html" title="Week 33: Keep charged" />
      <published>2018-06-24T04:45:00+05:30</published>
      <updated>2018-06-24T04:45:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-33</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-33/">&lt;p&gt;This week has been the best so far.  Simran and Apoorva have picked up their (much awaited) pace, and their rating is just soaring every day. Very happy to see this progress and hoping that they are also enjoying this process. You’re learning more every passing day, and this will build your fluency with maths and code. Next level is around the corner to bring you more challenges and will put you across more complex problems to solve. The future problems will need a sound understanding of newer concepts, but more importantly, their complexity will corner you. Indispensable advice for you both in getting ready for the next level:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Go back and review all the feedback/suggestions given by me in the weekly updates and otherwise.&lt;/li&gt;
  &lt;li&gt;Organise your conceptual understanding, and knowledge gained so far, by making notes, or in any way to track and organize all the information.&lt;/li&gt;
  &lt;li&gt;Avoid modifying the global variables in your functions! Read input variables and change them and update the global variables by assigning the values returned by the functions. The idea of functions in programming languages is rooted in modularity and reusability, and keeping functions independent from any other part of the code enhances the readability and keeping things organized in your program.&lt;/li&gt;
  &lt;li&gt;Same with the print() function inside the functions. Use it as less as possible, only for testing and when necessary.&lt;/li&gt;
  &lt;li&gt;What you can instead do is to organize your python code as following.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# function code goes here..&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# function code goes here..&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# main code goes here..&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While on the one hand, Apoorva and Simran are cruising, Vineeta and Pranjal are struggling to make time to put in DecodeVector. Please manage your time as the journey is becoming more stringent by every coming day. This is the topmost concern for all of us right now. Can I request Vineeta and Pranjal to write all your concerns that are making it harder to proceed and share with us on Slack and we will try to help as soon as possible? Let’s grow together as a community.&lt;/p&gt;

&lt;h2 id=&quot;designing-the-next-chapter&quot;&gt;Designing the next chapter!&lt;/h2&gt;
&lt;p&gt;Now is the right time to start thinking to plan the next chapter of DecodeVector that will come after the summer break. I’ve some pointers that you can share your thoughts on if you see gaps.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Learning from experience so far and how we can streamline the overall process to determine best of our abilities. I personally like to keep things uncomfortable in DecodeVector since it is a learning space, but would happy to listen on any issues that you may have. We can together decide on tweaking certain things for the best.&lt;/li&gt;
  &lt;li&gt;Difficulty keeping up with DV rating? This is also an aspect thought well enough to help you in a more extended run. Again, if you would need, I can elaborate on why it makes sense to have DV rating. Let me know if anyone has any thoughts around this.&lt;/li&gt;
  &lt;li&gt;Progress log! I see that this is a tedious process and please bring in your ideas and solutions to do this in a better way. Unless you have any thoughts about maintaining a log, that feedback is also welcome.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s all for improving the existing schema of DV. The next step is making it welcoming for the new members we may have in the next month. For this, I have a long list of things to get done.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Getting on the same page on many things like the larger idea of why or why not programming makes sense for designers? Programming vs Development? Programming languages to choose for beginners? Wide spectrum within theoretical computer science? Learning to code at DecodeVector and elsewhere? It is okay to be not in consensus but being aware and critical of learning programming.&lt;/li&gt;
  &lt;li&gt;I’m thinking of a one-day open workshop/event during your revisiting week (possibly on 18th July) which will be about giving an introduction to idea of learning programming, sharing your individual experiences, exhibiting your relevant work/ideas, open hour to take questions from students and answer them, a live coding session and a screening exercise in the evening. Please put across your ideas and thoughts, and we can plan.&lt;/li&gt;
  &lt;li&gt;Reviewing the existing content on the website and updating it before the one-day event.&lt;/li&gt;
  &lt;li&gt;Rethinking screening exercise, making it more exciting and tough.&lt;/li&gt;
  &lt;li&gt;Discussing and planning the roadmap of DV for next few months and how we will balance this in between your busy semester.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s all for this week and keep up the spirit!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/spirit.png&quot; alt=&quot;Spirit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Courtesy: &lt;a href=&quot;https://xkcd.com/695/&quot;&gt;xkcd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And yes, great work by Apoorva and Simran to not just complete the 5 day GitHub streak but breaking the challenge! Motivated by your streaks, Can I give you one more challenge this week? Here is the challenge – Can you solve pset/0085 this week?&lt;/p&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s New?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Stats page&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): Simran (8)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Apoorva (55+)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Apoorva (97)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Apoorva (97)&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (13/06/2018-24/06/2018 .. 12 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Apoorva (29/04/2018 .. 14 problems)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“One and one and one is three.” - The Beatles (Come together)&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">This week has been the best so far. Simran and Apoorva have picked up their (much awaited) pace, and their rating is just soaring every day. Very happy to see this progress and hoping that they are also enjoying this process. You’re learning more every passing day, and this will build your fluency with maths and code. Next level is around the corner to bring you more challenges and will put you across more complex problems to solve. The future problems will need a sound understanding of newer concepts, but more importantly, their complexity will corner you. Indispensable advice for you both in getting ready for the next level: Go back and review all the feedback/suggestions given by me in the weekly updates and otherwise. Organise your conceptual understanding, and knowledge gained so far, by making notes, or in any way to track and organize all the information. Avoid modifying the global variables in your functions! Read input variables and change them and update the global variables by assigning the values returned by the functions. The idea of functions in programming languages is rooted in modularity and reusability, and keeping functions independent from any other part of the code enhances the readability and keeping things organized in your program. Same with the print() function inside the functions. Use it as less as possible, only for testing and when necessary. What you can instead do is to organize your python code as following.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Change in PSET points</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/change-in-pset-points/" rel="alternate" type="text/html" title="Change in PSET points" />
      <published>2018-06-18T01:45:00+05:30</published>
      <updated>2018-06-18T01:45:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/change-in-pset-points</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/change-in-pset-points/">&lt;p&gt;Following problems are now for more points after review.&lt;/p&gt;

&lt;h2 id=&quot;1-to-2-points&quot;&gt;1 to 2 points&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;0017&lt;/li&gt;
  &lt;li&gt;0018&lt;/li&gt;
  &lt;li&gt;0021&lt;/li&gt;
  &lt;li&gt;0022&lt;/li&gt;
  &lt;li&gt;0023&lt;/li&gt;
  &lt;li&gt;0024&lt;/li&gt;
  &lt;li&gt;0047&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-to-3-points&quot;&gt;1 to 3 points&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;0016&lt;/li&gt;
  &lt;li&gt;0049&lt;/li&gt;
  &lt;li&gt;0050&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-to-5-points&quot;&gt;3 to 5 points&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;0037&lt;/li&gt;
  &lt;li&gt;0071&lt;/li&gt;
  &lt;li&gt;0070&lt;/li&gt;
  &lt;li&gt;0069&lt;/li&gt;
  &lt;li&gt;0068&lt;/li&gt;
  &lt;li&gt;0044&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please adjust your DV Rating and progress wiki.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Important" />
      
        <category term="Update" />
      

      

      
        <summary type="html">Following problems are now for more points after review.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0093: Newton Raphson</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0093/" rel="alternate" type="text/html" title="0093: Newton Raphson" />
      <published>2018-06-17T23:35:00+05:30</published>
      <updated>2018-06-17T23:35:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0093</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0093/">&lt;p&gt;​Write a computer program to compute square root by &lt;a href=&quot;https://en.wikipedia.org/wiki/Newton%27s_method&quot;&gt;newton raphson method&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="3 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">​Write a computer program to compute square root by newton raphson method.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0092: Base Conversion 2</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0092/" rel="alternate" type="text/html" title="0092: Base Conversion 2" />
      <published>2018-06-17T23:32:00+05:30</published>
      <updated>2018-06-17T23:32:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0092</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0092/">&lt;p&gt;Write a computer program to convert binary (base 2) numbers numbers into decimal (base 10).&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="0 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a computer program to convert binary (base 2) numbers numbers into decimal (base 10).</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0091: Unique random numbers</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0091/" rel="alternate" type="text/html" title="0091: Unique random numbers" />
      <published>2018-06-17T23:31:00+05:30</published>
      <updated>2018-06-17T23:31:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0091</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0091/">&lt;p&gt;Write a program that generates 5 unique random numbers.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="2 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a program that generates 5 unique random numbers.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0090: Floating point average</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0090/" rel="alternate" type="text/html" title="0090: Floating point average" />
      <published>2018-06-17T23:30:00+05:30</published>
      <updated>2018-06-17T23:30:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0090</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0090/">&lt;p&gt;Write a program that calculates the average of an array of 10 floating-point values.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="0 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a program that calculates the average of an array of 10 floating-point values.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0089: Base Conversion</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0089/" rel="alternate" type="text/html" title="0089: Base Conversion" />
      <published>2018-06-17T23:25:00+05:30</published>
      <updated>2018-06-17T23:25:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0089</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0089/">&lt;p&gt;Write a computer program to convert decimal (base 10) numbers into binary (base 2) numbers.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="0 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a computer program to convert decimal (base 10) numbers into binary (base 2) numbers.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0088: Number Spiral Diagonal</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0088/" rel="alternate" type="text/html" title="0088: Number Spiral Diagonal" />
      <published>2018-06-17T23:20:00+05:30</published>
      <updated>2018-06-17T23:20:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0088</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0088/">&lt;p&gt;&lt;em&gt;The following problem is taken from Project Euler.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[21] 22  23  24 [25]
 20 [07] 08 [09] 10
 19  06 [01] 02  11
 18 [05] 04 [03] 12
[17] 16  15  14 [13]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It can be verified that the sum of the numbers on the diagonals is 101.&lt;/p&gt;

&lt;p&gt;What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="15 Point" />
      

      
        <category term="Python" />
      
        <category term="Euler Project" />
      

      
        <summary type="html">The following problem is taken from Project Euler.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0087: Quadratic Primes</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0087/" rel="alternate" type="text/html" title="0087: Quadratic Primes" />
      <published>2018-06-17T23:20:00+05:30</published>
      <updated>2018-06-17T23:20:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0087</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0087/">&lt;p&gt;&lt;em&gt;The following problem is taken from Project Euler.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Euler discovered the remarkable quadratic formula:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;n^2+n+41&lt;/script&gt;

&lt;p&gt;It turns out that the formula will produce $40$ primes for the consecutive integer values $0≤n≤39$
. However, when $n=40,402+40+41=40(40+1)+41$ is divisible by $41$, and certainly when $n=41,412+41+41$ is clearly divisible by $41$.&lt;/p&gt;

&lt;p&gt;The incredible formula $n^2−79n+1601$ was discovered, which produces $80$ primes for the consecutive values $0≤n≤79$. The product of the coefficients, $−79$ and $1601$, is $−126479$.&lt;/p&gt;

&lt;p&gt;Considering quadratics of the form:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;n^2+an+b&lt;/script&gt;

&lt;p&gt;where $\mod{a}&amp;lt;1000$ and $\mod{b}≤1000$&lt;br /&gt;
where $\mod{n}$ is the modulus/absolute value of $n$\&lt;/p&gt;

&lt;p&gt;e.g. $\mod{11}=11$ and $\mod{−4}=4$&lt;/p&gt;

&lt;p&gt;Find the product of the coefficients, $a$ and $b$, for the quadratic expression that produces the maximum number of primes for consecutive values of $n$, starting with $n=0$.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="15 Point" />
      

      
        <category term="Python" />
      
        <category term="Euler Project" />
      

      
        <summary type="html">The following problem is taken from Project Euler.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0086: Binomial Expansion</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0086/" rel="alternate" type="text/html" title="0086: Binomial Expansion" />
      <published>2018-06-17T23:15:00+05:30</published>
      <updated>2018-06-17T23:15:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0086</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0086/">&lt;p&gt;In elementary algebra, the binomial theorem (or binomial expansion) describes the algebraic expansion of powers of a binomial. According to the theorem, it is possible to expand the polynomial $(x + y)^n$ into a sum involving terms of the form $ax^by^c$, where the exponents $b$ and $c$ are nonnegative integers with $b + c = n$, and the coefficient $a$ of each term is a specific positive integer depending on $n$ and $b$.&lt;/p&gt;

&lt;p&gt;Write a program that reads an integer $n$ and prints out entire expansion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Input:&lt;/em&gt;
4&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;
&lt;script type=&quot;math/tex&quot;&gt;(x + y)^4 = x^4+4x^3y+6x^2y^2+4xy^3+y^4&lt;/script&gt;&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="5 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">In elementary algebra, the binomial theorem (or binomial expansion) describes the algebraic expansion of powers of a binomial. According to the theorem, it is possible to expand the polynomial $(x + y)^n$ into a sum involving terms of the form $ax^by^c$, where the exponents $b$ and $c$ are nonnegative integers with $b + c = n$, and the coefficient $a$ of each term is a specific positive integer depending on $n$ and $b$.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0085: Reciprocal Cycles</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0085/" rel="alternate" type="text/html" title="0085: Reciprocal Cycles" />
      <published>2018-06-17T23:10:00+05:30</published>
      <updated>2018-06-17T23:10:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0085</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0085/">&lt;p&gt;&lt;em&gt;The following problem is taken from Project Euler.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{2}	= 	0.5&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{3}	= 	0.(3)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{4}	= 	0.25&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{5}	= 	0.2&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{6}	= 	0.1(6)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{7}	= 	0.(142857)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{8}	= 	0.125&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{9}	= 	0.(1)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{10}	= 	0.1&lt;/script&gt;

&lt;p&gt;Where $0.1(6)$ means $0.166666…$, and has a 1-digit recurring cycle. It can be seen that $\frac{1}{7}$ has a 6-digit recurring cycle.&lt;/p&gt;

&lt;p&gt;Find the value of $d \lt 1000$ for which $\frac{1}{d}$ contains the longest recurring cycle in its decimal fraction part.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="10 Point" />
      

      
        <category term="Python" />
      
        <category term="Project Euler" />
      

      
        <summary type="html">The following problem is taken from Project Euler.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0084: Caeser’s Cipher</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0084/" rel="alternate" type="text/html" title="0084: Caeser's Cipher" />
      <published>2018-06-17T19:05:00+05:30</published>
      <updated>2018-06-17T19:05:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0084</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0084/">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/N2tjzHzWOjQ&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Caesar’s method is an encryption scheme involving shifting an alphabet (so $a \rightarrow c$, $b \rightarrow d$, $c \rightarrow e$, $d \rightarrow f$ , etc., $x \rightarrow z$, $y \rightarrow a$, $z \rightarrow b$). It is one of the most basic encryption methods, and is a specialized form of a transposition cipher.&lt;/p&gt;

&lt;p&gt;Because the alphabet is rotated, the shift is consistent. A mapping of $a \rightarrow b$, $b \rightarrow c$, etc. is termed &lt;code class=&quot;highlighter-rouge&quot;&gt;ROT 1&lt;/code&gt; because the letters are shifted by one. Note that z would map to a due to the circular aspect of the rotation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://mathworld.wolfram.com/images/eps-gif/CaesarsMethod_800.gif&quot; alt=&quot;CaesarsMethod_800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Encrypting with &lt;code class=&quot;highlighter-rouge&quot;&gt;ROT alpha&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ROT beta&lt;/code&gt; yields the same ciphertext if and only if &lt;code class=&quot;highlighter-rouge&quot;&gt;alpha=beta (mod 26)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ROT 13&lt;/code&gt; is a popular encryption method on the Internet since it obfuscates text sufficiently to prevent accidental reading of the text. It is commonly used to list answers of puzzles, for example.&lt;/p&gt;

&lt;p&gt;Caesar’s method is a very weak encryption scheme, since there are 26 possibilities (of which one, &lt;code class=&quot;highlighter-rouge&quot;&gt;ROT 26&lt;/code&gt;, is trivial). These can be easily checked by hand.&lt;/p&gt;

&lt;p&gt;Write two python programs –&lt;/p&gt;

&lt;p&gt;(a) Reads a message and a caeser’s key (integer) and encrypts the message with the given key.&lt;/p&gt;

&lt;p&gt;(b) Reads an encrypted message and a caeser’s key (integer) and decrypt the message with the given key.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Macura, Wiktor K. “Caesar’s Method.” From MathWorld–A Wolfram Web Resource, created by Eric W. Weisstein. http://mathworld.wolfram.com/CaesarsMethod.html&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="3 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0083: Pythagorean Triplet 2</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0083/" rel="alternate" type="text/html" title="0083: Pythagorean Triplet 2" />
      <published>2018-06-17T19:00:00+05:30</published>
      <updated>2018-06-17T19:00:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0083</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0083/">&lt;p&gt;A Pythagorean triplet is a set of three natural numbers, $a &amp;lt; b &amp;lt; c$, for which,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^2 + b^2 = c^2&lt;/script&gt;

&lt;p&gt;For example, $ 3^2 + 4^2 = 9 + 16 = 25 = 5^2 $.&lt;/p&gt;

&lt;p&gt;Write a python program that reads three integers and returns &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt; if the integers forms a Pythagorean triplet and &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt; otherwise.&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="1 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">A Pythagorean triplet is a set of three natural numbers, $a &amp;lt; b &amp;lt; c$, for which,</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Week 32: Balancing DV and everything else</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-32/" rel="alternate" type="text/html" title="Week 32: Balancing DV and everything else" />
      <published>2018-06-17T04:45:00+05:30</published>
      <updated>2018-06-17T04:45:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-32</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-32/">&lt;p&gt;I think it would be safe to say that last week’s update left each of us wanting to point our compasses back to dv,  because while it gets difficult to attain the same kind of focus and attention as we together achieve in our N5’s room of requirement, it does not formulate itself to be an excuse. We’re all very capable people and should be standing by our word, since DecodeVector is something we all want to learn from.&lt;/p&gt;

&lt;p&gt;Having said that, I feel like I understand perspectives of us all working our way through summer, trying to sustain our scores to get back stronger and more confident. But I also get that it really doesn’t come easy. From getting caught up in work with the house, to traveling to different places or meeting up with people I’m bound to meet over the summer, to also finally finding some time and still being unproductive at it, it took me a little over a month to realise what I’m going to label ‘Debug’ to pull my way through it all. The balance is essential, and so is keeping yourself motivated. And I’ll tell you what helped me realise that.&lt;/p&gt;

&lt;p&gt;I come from a family of CS engineers, people who are so enthusiastic about math and science that I feel the same energy in N5 every evening. I like to think that I surround myself with that like-mindedness and people open to discussing ideas and opinions and are generally appreciative of the same. But over the past few weeks, I didn’t have that around me. My sister and my dad both live in different cities, so the little motivation I could get, was only from getting in touch with my peers, Apoorva and Vineeta that has helped me so far.&lt;/p&gt;

&lt;p&gt;Because of these little instances, I’ve come to realise that in addition to doing something I like, I’m a person driven by people around me, their belief in seeing potential in me. But that also comes up to expectations and the fear of disappointing them, which acts as a good motivator for me.&lt;/p&gt;

&lt;p&gt;But that’s just me. Finding out what motivates you, or knowing what doesn’t, can really help you align your vector to productivity. I personally made sure I was either talking to my father or my roommate to keep myself reminded of why I’m working for this and what I want to achieve out of it.&lt;/p&gt;

&lt;p&gt;Here’s my list of debugging tips, you could try and see if they work for you (I’m a struggler myself; let me know if I should do something differently!) :&lt;/p&gt;

&lt;h2 id=&quot;general-programming-advice&quot;&gt;General programming advice&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Time yourself: Lowers the chances of procrastination&lt;/li&gt;
  &lt;li&gt;Don’t push it if it’s not happening: By this I don’t mean give up altogether. Take a break. It’s okay if you don’t complete the problem in one go. It’s important you enjoy solving it!&lt;/li&gt;
  &lt;li&gt;If you’ve been doing well lately, Streak it! : If you get into the habit of updating your score daily, you’ll see how much you can pull yourself up by doing so little regularly. It is motivating to see the numbers go up&lt;/li&gt;
  &lt;li&gt;Don’t stop after solving one: I’ve seen from experience that solutions show up as a domino effect sometimes&lt;/li&gt;
  &lt;li&gt;Don’t associate the difficulty of the problem with the points&lt;/li&gt;
  &lt;li&gt;Pick more than just one problem and work on them simultaneously: Switch between them if they seem to meet a dead end, and come back to them later.&lt;/li&gt;
  &lt;li&gt;Collaborate: Or ask fellow DVas. We’re all the same!&lt;/li&gt;
  &lt;li&gt;Don’t worry about the score: Contrary to popular belief, keep sustained efforts in place and the score will go up on it’s own. Don’t solve the problems for points&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;balancing-dv-and-everything-else&quot;&gt;Balancing DV and everything else&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Find your zone: I can’t emphasise enough how important this is! If it’s music, or your spot by the window, your your desk away from people. Find it. Reserve it. Utilise it. Use it to focus on your problem at hand.&lt;/li&gt;
  &lt;li&gt;Cut out the distractions: I went back to my board examination habit of keeping my water bottle and snacks ready in place, and cellphone off.&lt;/li&gt;
  &lt;li&gt;Assign a convenient time, with buffers around it to ensure you’re able to get it regularly&lt;/li&gt;
  &lt;li&gt;Put yourself first! While other things seem important, prioritise. Is it really worth compromising this over?&lt;/li&gt;
  &lt;li&gt;There’s fun associated to solving problems if you can find yourself doing them stress-free.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would say this as a reminder to myself, or put it on a stickie in my room if I were home, but I’ll share it with my fellow DVas as well:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are your own excuse, and your own motivator. Leverage this extra time as much as you can, there is still time till all the workload adds to this and takes the joy out of it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Knowledge is power!&lt;/p&gt;

&lt;p&gt;Also guys the world will be doomed if we don’t learn how to tackle AI lets save the world and DecodeVector.&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

&lt;h2 id=&quot;rating-sawtooth&quot;&gt;Rating Sawtooth&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/week-32-chart.png&quot; alt=&quot;Figure your pattern&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s New?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Changes in look and feel of the website.&lt;/li&gt;
  &lt;li&gt;Updated underlying website dependencies.&lt;/li&gt;
  &lt;li&gt;Changed category/tag implementation in the DV website.&lt;/li&gt;
  &lt;li&gt;Fixed search to be able to search the post/page content.&lt;/li&gt;
  &lt;li&gt;Updated PSET issues pointed out on GitHub.&lt;/li&gt;
  &lt;li&gt;New PSET problems! 0083 - 0093.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): Apoorva (6)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Apoorva (52)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Apoorva (52)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Apoorva (52)&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (13/06/2018-17/06/2018 .. 5 days), Apoorva (14/05/2018-18/05/2018 .. 5 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Apoorva (29/04/2018 .. 14 problems)&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Simran Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">I think it would be safe to say that last week’s update left each of us wanting to point our compasses back to dv, because while it gets difficult to attain the same kind of focus and attention as we together achieve in our N5’s room of requirement, it does not formulate itself to be an excuse. We’re all very capable people and should be standing by our word, since DecodeVector is something we all want to learn from.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Week 31: Talking to Computers</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-31/" rel="alternate" type="text/html" title="Week 31: Talking to Computers" />
      <published>2018-06-10T23:45:00+05:30</published>
      <updated>2018-06-10T23:45:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-31</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-31/">&lt;p&gt;After seeing some hope last week, I was excited about this week but this week has been complete drought. I’m tired of repeating myself now if you do not take efforts, I don’t care. Despite, I will continue with what least I can do.&lt;/p&gt;

&lt;p&gt;This week, I’m writing my account of ups and downs in learning computer science. Hopefully, you might take a lesson or two from my experience.&lt;/p&gt;

&lt;p&gt;I’m a self-taught computer programmer and started much earlier to my benefit. I was conversant with the BASIC and C++ in my early secondary school solely by sitting next to my father when he used to code at home. I think I was in awe of how computers work! I still get intrigued by simplest of the programs like Hello World! Isn’t it amazing that a few transistors and electricity together is displaying a string of characters on display! Its mind boggling that we(humans) have achieved so much and computers have now surpassed humans in many areas, and one can only imagine what can be made when humans and machine work in synergy. Together, we have this abundance of creative intelligence which has the potential to solve the biggest of the problems we have. Possibly that is why computers are called as the literacy for the 21st century. This is what excites me! Being able to talk to computers is unbelievable, it is like an additional thinking capability, computers are excellent in some of the areas where humans can only imagine. Telecommunication to Education to Space tech to watching that cat video on your phone, its all through computers! And programming is one of the undiluted ways to talk to machines. I wanted to push the envelope and investigated how I can get better and better at ‘talking’ to computers. Maths’ was the answer! The computer instructions are arithmetic operations done on hundreds to thousands of adders made from the transistors. Later, I taught myself to code on Intel 8008, and I was blown away by this marvel. I’m still very inclined to low-level programming and wanted to program in a language where I get most control of the machine which higher-level programming language prohibits. One of the key things that helped me learn programming languages without much pain was my experience with low-level languages first. I know what happens when a variable is declared or a loop is running, deep down to the memory or microprocessor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Analytical Engine weaves Algebraical patterns just as the Jacquard loom weaves flowers and leaves. - - A. Augusta, Countess of Lovelace, on Babbage’s Analytical Engine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the contrary, there is now an uncountable number of online courses available to teach programming of which most skip the fundamental understanding of computers and focus on getting simple and necessary things done. While there is inherently no problem with these courses, but how one consumes this information and often takes shortcuts to get things done faster. Learning to code is similar to learning a language. Can you imagine learning a language (say English or Hindi) in the way programming tutorials do? You are must fluent and comfortable in speaking your mother tongue, and you learned that making mistakes, discovered by some hand-holding, learned by understanding the alphabet, grammar, rules of the language but step by step, gradually. Do not learn in haste but learn on a daily basis. Unlike most people, I never worried about knowing the syntaxes or knowing how to compile a program. My point of concern was always the problem that I’m trying to solve through the code.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;No matter how far down the wrong road you have gone, turn back now. - Anonymous Turkish Proverb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Much later, I learned C (the predecessor of C++) and could see how things were abstracted, made more accessible to the end programmer. And today we have way more simplified syntaxes to get things done. Can I at least ask members of DV to not fall into the trap, do not look for shortcuts. Find how the computer executes each instruction, and you will learn a great deal of information which is instrumental in this process of learning programming. After that, I tried with various languages and settled with C++. C++ is of course not the best language, but there is, in fact, no best language. Computer languages are generally developed to do a specific task, and C++ fits my need for scientific computing back in time. You would, of course, require HTML to code a web page, and C++ cannot get much over there.&lt;/p&gt;

&lt;p&gt;I think just the documentation of a programming language you’re working with is enough for you to learn that language. You would find all syntaxes and constructs in it. And the rest will be simplified by me during the classes.&lt;/p&gt;

&lt;p&gt;Later I started solving problems (like PSETs) to get more and more comfortable with computers, and you would be amazed by how much you can get comfortable with speaking to computers! To me, it is like daily exercise one would do to keep their body fit. I have not stopped that even now, I do problems like these to get better and to be able to solve the more significant problems that I’m targeting at.&lt;/p&gt;

&lt;p&gt;Okay, all of these are ups in my journey, where is the down? I have not had downs yet, but I’m ready to embrace it. Oh yes, just one that I can recall is that I was denied Computer Science during my eleventh standard admission.&lt;/p&gt;

&lt;p&gt;This is a small and abstracted and incomplete account of my journey with programming for you to have at least one takeaway but as I’m writing this sentence, I think this may encourage new-comers towards low-level programming. It’s okay if you don’t understand the difference between low-level and high-level yet. I will cover it in subsequent posts in the future.&lt;/p&gt;

&lt;p&gt;Please do not solve PSETs by referring to examples on the internet; it will dilute your learning process. You are only allowed to see the programming language documentation. Python documentation in this case. And that’s’ all!&lt;/p&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s New?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Minor changes in look and feel of the website.&lt;/li&gt;
  &lt;li&gt;Minor bug fixes in the DV website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): None&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Simran (38)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Simran (22)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Simran (22)&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (04/05/2018-08/05/2018 .. 5 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Simran (04/04/2018 .. 9 problems, 16/04/2018 .. 9 problems)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, who is finding difficulty to do PSETs and who is ready to take on the even more upcoming difficult challenge in DV?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You should figure out programs as you’re writing them, just as writers and painters and achitects do. Realizing this [programming as sketching] has real implications for software design. It means that a programming language should, above all, be malleable. A programming language is for thinking of programs, not for expressing programs you’ve already thought of. It should be a pencil, not pen. […] Remember too that languages are not primarily a form for finished programs, but something that programs have to be developed in. […] A good programming language should, like oil paint, make it easy to change your mind.[…] Paintings usually begin with a sketch. Gradually the details get filled in. But it is not merely a process of filling in. Sometimes the original plans turn out to be mistaken. Countless paintings, when you look at them in x-rays, turn out to have limbs that have been moved or facial features that have been readjusted.[…] So the test of a language is not simply how clean the finished program looks in it, but how clean the path to the finished program was […] What made oil paint so exciting, when it first became popular in the fifteenth century, was that you could make the finished work from the prototype. You could make a preliminary drawing if you wanted to, but you weren’t held to it; you could work out all the details, and even make major changes as you finished the painting. You can do this with software too. A prototype doesn’t have to be just a model; you can refine it into the finished product….it’s good for morale […] Building something by gradually refining a prototype is good for morale because it keeps you engaged. In software, my rule is: always have working code. If you’re writing something you’ll be able to test in an hour, you have the prospect of an immediate reward to motivate you. - P. Graham (in “Hackers and Painters” pg. 22, 27, 218, 219, 220, 221)&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">After seeing some hope last week, I was excited about this week but this week has been complete drought. I’m tired of repeating myself now if you do not take efforts, I don’t care. Despite, I will continue with what least I can do.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Week 30: Be resilient (and honest)!</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-30/" rel="alternate" type="text/html" title="Week 30: Be resilient (and honest)!" />
      <published>2018-06-03T22:42:00+05:30</published>
      <updated>2018-06-03T22:42:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-30</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-30/">&lt;p&gt;Finally, I’m starting to see the sprouts above the ground. Thank you for reciprocating after last week’s update. I hope you soon see a positive impact of efforts that you’re taking.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It’s not that I’m so smart, it’s just that I stay with problems longer.” - Albert Einstein&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course, it is difficult to keep up with DV on a daily basis, but that’s how it is. You have to put yourself in an uncomfortable position. And not putting enough efforts in DV daily will only make it harder for you and you will be helpless to complete the PSET problems in lesser time (and possibly adopt unfair means to do it). Be resilient and honest! All I want from you is to take genuine efforts on a regular basis to understand this lens of computation. As long as you continue to make efforts, you will keep solving the PSETs at the required pace.&lt;/p&gt;

&lt;p&gt;I can see that sometimes you feel that you should know more, especially about the programming language (Python in this case) itself to solve PSET problem. But sooner or later you will realize that learning to code mostly involves the right attitude and problem-solving capabilities and everything else is secondary. The syntax and constructs of the language will be given to you as you progress and are apt at your level. All I’m saying is that sometimes you make your job difficult by learning something before you should have. I intend (through PSETs) that you have enough practice to understand and familiarize before you acquire a shortcut to do that. For instance, there is a sort method available in Python to sort your list variable, but I have avoided so far so that you can learn how it works and code it by yourself. I hope you’ll appreciate the thought behind this later on.&lt;/p&gt;

&lt;h2 id=&quot;individual-feedback&quot;&gt;Individual Feedback&lt;/h2&gt;
&lt;h3 id=&quot;simran&quot;&gt;Simran&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;You’re finally able to do DV daily. Continue with your efforts and focus on your streak.&lt;/li&gt;
  &lt;li&gt;Good work on updating your progress on the wiki.&lt;/li&gt;
  &lt;li&gt;Please add comments to your programs.&lt;/li&gt;
  &lt;li&gt;Use meaningful names for the variables and functions.&lt;/li&gt;
  &lt;li&gt;Add meaningful commit messages.&lt;/li&gt;
  &lt;li&gt;Avoid &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;. Instead, read the variables from function argument and return the values to update those variables.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apoorva&quot;&gt;Apoorva&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Good work on sustained efforts minus wiki.&lt;/li&gt;
  &lt;li&gt;Please add comments to your programs.&lt;/li&gt;
  &lt;li&gt;Use meaningful names for the variables and functions.&lt;/li&gt;
  &lt;li&gt;Add meaningful commit messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vineeta&quot;&gt;Vineeta&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;You’re queuing at the exit door. Good luck!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pranjal&quot;&gt;Pranjal&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Good work on sustained efforts.&lt;/li&gt;
  &lt;li&gt;Please add comments to your programs.&lt;/li&gt;
  &lt;li&gt;Use meaningful names for the variables and functions.&lt;/li&gt;
  &lt;li&gt;Add meaningful commit messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s New?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;I have been experimenting with look and feel of the website. You will see new changes (work in progress) in this week’s update.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): Simran (6)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Simran (38)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Simran (20)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Unknown&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (04/05/2018-08/05/2018 .. 5 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Simran (04/04/2018 .. 9 problems, 16/04/2018 .. 9 problems)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;warning&quot;&gt;Warning!&lt;/h2&gt;
&lt;p&gt;One or more of you is/are found to be copying the code from the internet, and this is super serious! Your small violation might cost you exit from DV. Whoever you are (of course, I know who), please accept your offense it on #decodevector on the slack and don’t repeat this within DV again. You are enforcing me to make the rating system even more stringent for all!&lt;/p&gt;

&lt;p&gt;Anyways that’s all for this week. Happy Monsoon and Happy (de)coding!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It is our choices, Harry, that show what we truly are, far more than our abilities” - Albus Dumbledore&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">Finally, I’m starting to see the sprouts above the ground. Thank you for reciprocating after last week’s update. I hope you soon see a positive impact of efforts that you’re taking.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Week 29: Mid-summersault</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/weekly-update-29/" rel="alternate" type="text/html" title="Week 29: Mid-summersault" />
      <published>2018-05-27T23:25:00+05:30</published>
      <updated>2018-05-27T23:25:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/weekly-update-29</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/weekly-update-29/">&lt;p&gt;It is moments like these which make me question if I’m not doing enough to keep the energy alive. Repeating, it’s not going to come any easy. You’ll have to put in efforts, and only then you will reap its benefit. But, first, you have to start doing and do it daily. Well, the price you pay is a part of your time every day goes into this. And that will help you build the habit, habit of learning and practicing. Will you pay this price to reap the unknown? &lt;/p&gt;

&lt;p&gt;This week was no different from the past, same old story of scarce attempts and continuation of ignoring my requests. Everyone seems quite involved in their own business and have forgotten their word. It’s not going to work this way. Three of you are just about to slip, and I hope you are aware what will it take to start all over again (from the screening) post-summer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why hurry up?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, there’s nothing wrong with self-paced. And speeding up without compromising on conceptual understanding is very difficult. The reason, why I emphasize on pace has a two-fold purpose - one that it will push you to take efforts on a daily basis which will help you make problem-solving as a habit and secondly because of the nature of technology itself. Theoretical CS and digital technology are advancing at an unprecedented rate, and as designers who have little to no formal background in fundamentals of CS, it’s very very difficult to be even get acquainted with tools and models, forget solving the problems through the lens of computation. There’s ML, AI, NLP, AGI, AR, VR and what not! But there is good news — that we have access to an abundance of resources - courses, book, tools on the internet that let you learn at your pace. But the catch is you will have to do it yourself; you will have to motivate yourself to get going and most likely if you’re not strong enough, you will lose the progress. All I can say now is that you can leverage from DV.&lt;/p&gt;

&lt;h2 id=&quot;if-this-then-what&quot;&gt;If this then what?&lt;/h2&gt;

&lt;p&gt;Appreciate yourself that you’re today able to code by yourself and you have achieved this in so less (D)ays. I’m sure you cannot imagine what you’ll be like if you do it regularly. I’m hopeful that one of you will soon reach level 1 and help express why daily efforts are non-negotiable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/week-29-chart.png&quot; alt=&quot;Figure your pattern&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Writing this in big words, so you don’t miss this again. Please route your issues on GitHub whether you want to ask me or anyone else. Don’t use slack for clearing your code issues whatsoever. I have explained the reason in W27 update.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s new?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;New PSET problems added (0073-0082)&lt;/li&gt;
  &lt;li&gt;New website feature: &lt;a href=&quot;/search&quot;&gt;Search!&lt;/a&gt; You can now quickly search PSETs, notes or anything on the website through this&lt;/li&gt;
  &lt;li&gt;Captions for each weekly update&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-so-far&quot;&gt;And so far…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Most PSET problems solved (this week): Apoorva (unknown)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved (all-time): Simran (29)&lt;/li&gt;
  &lt;li&gt;Most rating (this week): Apoorva (unknown)&lt;/li&gt;
  &lt;li&gt;Most rating (all-time): Apoorva (unknown)&lt;/li&gt;
  &lt;li&gt;Best streak: Simran (04/05/2018-08/05/2018 .. 5 days)&lt;/li&gt;
  &lt;li&gt;Most PSET problems solved in one day: Simran (04/04/2018 .. 9 problems, 16/04/2018 .. 9 problems)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Anyone who can make Apoorva mark her PSET progress correctly on her wiki will be rewarded.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Suppose that you want to teach the ‘cat’ concept to a very young child. Do you explain that a cat is a relatively small, primarily carnivorous mammal with retractable claws, a distinctive sonic output, etc.? I’ll bet not. You probably show the kid a lot of different cats, saying ‘kitty’ each time, until it gets the idea. To put it more generally, generalizations are best made by abstraction from experience.” — R. P. Boas (Can we make mathematics inteligible?, American Mathematical Monthly 88 (1981), pp. 727-731)&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Notes" />
      
        <category term="Update" />
      

      

      
        <summary type="html">It is moments like these which make me question if I’m not doing enough to keep the energy alive. Repeating, it’s not going to come any easy. You’ll have to put in efforts, and only then you will reap its benefit. But, first, you have to start doing and do it daily. Well, the price you pay is a part of your time every day goes into this. And that will help you build the habit, habit of learning and practicing. Will you pay this price to reap the unknown? </summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0082: Star Pattern 2</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0082/" rel="alternate" type="text/html" title="0082: Star Pattern 2" />
      <published>2018-05-27T22:00:00+05:30</published>
      <updated>2018-05-27T22:00:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0082</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0082/">&lt;p&gt;Write a function starPattern(n) which prints following.&lt;/p&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Input:&lt;/em&gt;
5&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="0 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a function starPattern(n) which prints following.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">0081: 1-bit Full Adder 2</title>
      
      <link href="http://decodevector.mathscapes.xyz//sub/pset-0081/" rel="alternate" type="text/html" title="0081: 1-bit Full Adder 2" />
      <published>2018-05-27T22:00:00+05:30</published>
      <updated>2018-05-27T22:00:00+05:30</updated>
      <id>http://decodevector.mathscapes.xyz//sub/pset-0081</id>
      <content type="html" xml:base="http://decodevector.mathscapes.xyz//sub/pset-0081/">&lt;p&gt;Write a computer program that implements 1-bit full adder using only logical operations (&lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt;).&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>Gaurav Singh</name>
          
          
        </author>
      

      
        <category term="Pset" />
      
        <category term="0 Point" />
      

      
        <category term="Python" />
      

      
        <summary type="html">Write a computer program that implements 1-bit full adder using only logical operations (and, or, not).</summary>
      

      
      
    </entry>
  
  
</feed>
